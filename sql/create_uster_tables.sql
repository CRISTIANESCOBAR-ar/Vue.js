-- SQL DDL para Oracle: crear tablas Uster_PAR y Uster_TBL relacionadas por TESTNR
-- Ejecutar este script en Oracle SQL Developer (con privilegios para crear tablas/seq/trigger o usar IDENTITY si Oracle 12c+)

-- 1) Tabla que contiene campos extraídos desde .PAR (resumen para Oracle)
create table uster_par (
   testnr           varchar2(32) primary key,
   catalog          varchar2(200),
   time_stamp       varchar2(100),
   lote             varchar2(100),
   sortiment        varchar2(100),
   article          varchar2(100),
   maschnr          varchar2(60),
   matclass         varchar2(100),
   nomcount         number,
   nomtwist         varchar2(100),
   uscode           varchar2(60),
   fb_mic           varchar2(100),
   fb_tipo          varchar2(100),
   fb_long          varchar2(100),
   fb_porc          number,
   laborant         varchar2(120),
   obs              clob,
   tuname           varchar2(120),
   groups           varchar2(120),
   within           varchar2(120),
   total            number,
   speed            varchar2(80),
   testtime         varchar2(80),
   slot             varchar2(80),
   absorberpressure varchar2(80),
   created_at       timestamp default systimestamp
);

comment on table uster_par is
   'Campos extraídos desde archivos .PAR (preview detallado)';

-- 2) Tabla que contiene filas importadas desde .TBL (multiple rows per TESTNR)
create table uster_tbl (
   id            number generated by default as identity primary key,
   testnr        varchar2(32) not null,
   seqno         number not null, -- # (orden en el archivo)
   no_           number,          -- columna 1
   tiempo_rotura number,         -- columna 2
   fuerza_b      number,          -- columna 3
   elongacion    number,          -- columna 4
   tenacidad     number,          -- columna 5
   trabajo       number,          -- columna 6
   created_at    timestamp default systimestamp,
   constraint fk_uster_tbl_par foreign key ( testnr )
      references uster_par ( testnr )
         on delete cascade
);

comment on table uster_tbl is
   'Filas de datos importados desde archivos .TBL. Cada fila guarda TESTNR más las columnas de datos.';

create index idx_uster_tbl_testnr on
   uster_tbl (
      testnr
   );

-- 3) Tabla para los datos de TensoRapid (antes Uster_TBL en la versión inicial)
create table tensorapid (
   id            number generated by default as identity primary key,
   testnr        varchar2(32) not null,
   seqno         number not null,
   no_           number,
   tiempo_rotura number,
   fuerza_b      number,
   elongacion    number,
   tenacidad     number,
   trabajo       number,
   created_at    timestamp default systimestamp,
   constraint fk_tensorapid_par foreign key ( testnr )
      references uster_par ( testnr )
         on delete cascade
);

comment on table tensorapid is
   'Filas de datos importados desde archivos .TBL para la página TensoRapid.';

-- 4) Asegurar que la tabla Uster_TBL contiene las columnas requeridas para Uster (tensores/estadísticas).
-- Agregamos columnas si no existen (idempotente)
begin
  -- Lista de columnas a asegurar: nombre => tipo
   declare
      v_sql varchar2(1000);
      v_cnt number;
   begin
    -- U%_% -> U_PERCENT
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'U_PERCENT';
      if v_cnt = 0 then
         v_sql := 'ALTER TABLE USTER_TBL ADD (U_PERCENT NUMBER)';
         execute immediate v_sql;
      end if;
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'CVM_PERCENT';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (CVM_PERCENT NUMBER)';
      end if;
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'INDICE_PERCENT';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (INDICE_PERCENT NUMBER)';
      end if;
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'CVM_1M_PERCENT';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (CVM_1M_PERCENT NUMBER)';
      end if;
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'CVM_3M_PERCENT';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (CVM_3M_PERCENT NUMBER)';
      end if;
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'CVM_10M_PERCENT';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (CVM_10M_PERCENT NUMBER)';
      end if;

    -- TITULO and TITULO_REL
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'TITULO';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (TITULO VARCHAR2(400))';
      end if;
      select count(*)
        into v_cnt
        from user_tab_columns
       where table_name = 'USTER_TBL'
         and column_name = 'TITULO_REL_PERC';
      if v_cnt = 0 then
         execute immediate 'ALTER TABLE USTER_TBL ADD (TITULO_REL_PERC VARCHAR2(200))';
      end if;

    -- H, SH and SH_*
      for col in (
         select column_name
           from (
            select 'H' as column_name
              from dual
            union all
            select 'SH'
              from dual
            union all
            select 'SH_1M'
              from dual
            union all
            select 'SH_3M'
              from dual
            union all
            select 'SH_10M'
              from dual
         )
      ) loop
         select count(*)
           into v_cnt
           from user_tab_columns
          where table_name = 'USTER_TBL'
            and column_name = col.column_name;
         if v_cnt = 0 then
            execute immediate 'ALTER TABLE USTER_TBL ADD ('
                              || col.column_name
                              || ' NUMBER)';
         end if;
      end loop;

    -- DELG_-30%_KM etc -> use DELG_MINUS30_KM etc
      for colname in (
         select 'DELG_MINUS30_KM' as c
           from dual
         union all
         select 'DELG_MINUS40_KM'
           from dual
         union all
         select 'DELG_MINUS50_KM'
           from dual
         union all
         select 'DELG_MINUS60_KM'
           from dual
      ) loop
         select count(*)
           into v_cnt
           from user_tab_columns
          where table_name = 'USTER_TBL'
            and column_name = colname.c;
         if v_cnt = 0 then
            execute immediate 'ALTER TABLE USTER_TBL ADD ('
                              || colname.c
                              || ' NUMBER)';
         end if;
      end loop;

    -- GRUE and NEPS series
      for colname in (
         select 'GRUE_35_KM' as c
           from dual
         union all
         select 'GRUE_50_KM'
           from dual
         union all
         select 'GRUE_70_KM'
           from dual
         union all
         select 'GRUE_100_KM'
           from dual
         union all
         select 'NEPS_140_KM'
           from dual
         union all
         select 'NEPS_200_KM'
           from dual
         union all
         select 'NEPS_280_KM'
           from dual
         union all
         select 'NEPS_400_KM'
           from dual
      ) loop
         select count(*)
           into v_cnt
           from user_tab_columns
          where table_name = 'USTER_TBL'
            and column_name = colname.c;
         if v_cnt = 0 then
            execute immediate 'ALTER TABLE USTER_TBL ADD ('
                              || colname.c
                              || ' NUMBER)';
         end if;
      end loop;

      commit;
   end;
end;
/

-- Ejemplo de INSERT (usar los valores reales de tu exportación)
-- INSERT INTO Uster_PAR (TESTNR, CATALOG, TIME_STAMP, LOTE, SORTIMENT, ARTICLE, MASCHNR, MATCLASS, NOMCOUNT, LABORANT)
-- VALUES ('001694', 'STC44', '1761445626 26.10.2025 03:27', 'LOT-1', 'ESTILO', 'ARTICLE T', 'OR10', 'MATCLASS N', 7, 'MUNIZ');
--
-- INSERT INTO Uster_TBL (TESTNR, SEQNO, NO_, TIEMPO_ROTURA, FUERZA_B, ELONGACION, TENACIDAD, TRABAJO)
-- VALUES ('001694', 1, 1, 8.78, 16.14, 18.82, 3.5, 0.54);

-- Recomendación: si algunos valores no pueden convertirse a NUMBER de forma segura,
-- importa primero como VARCHAR2 y después convierte / limpia en la base.

-- Fin del script